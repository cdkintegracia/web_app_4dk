import json

from fast_bitrix24 import Bitrix
import dateutil.parser

from web_app_4dk.authentication import authentication

b = Bitrix(authentication('Bitrix'))

# Словарь кодов 1с-коннект

connect_codes = {
'1': 'Текстовое сообщение',
'17': 'Оценка работы специалиста',
'20': 'Начало звонка с открытием обращения',
'21': 'Начало звонка без открытия обращения',
'22': 'Удачное завершение звонка',
'23': 'Неудачное завершение звонка. Вызов отменен инициатором',
'24': 'Неудачное завершение звонка. Абонент не ответил',
'25': 'Неудачное завершение звонка. Нет свободных специалистов',
'26': 'Неудачное завершение звонка. Вызов отклонен адресатом',
'27': 'Перевод звонка на специалиста',
'28': 'Перевод звонка в компанию вендора',
'30': 'Перевод звонка без завершения (когда абонент не взял трубку, а сразу перевел звонок)',
'31': 'Перевод звонка без завершения на вендора (когда абонент не взял трубку, а сразу перевел звонок)',
'32': 'Нет соединения с голосовым сервером',
'36': 'Неудачное завершение. У абонента нет аудио устройства',
'38': 'Недоступная линия по звонку (нерабочее время)',
'70': 'Файл',
'50': 'Начало сеанса удаленного доступа с сервисным специалистом',
'51': 'Начало сеанса удаленного доступа без сервисного специалиста (Специалист принудительно назначается пользователю сеансом удаленного доступа)',
'52': 'Окончание сеанса удаленного доступа с передачей файлов',
'53': 'Окончание сеанса удаленного доступа без передачей файлов',
'54': 'Неудачное завершение удаленного доступа. Сеанс отменен инициатором',
'55': 'Неудачное завершение удаленного доступа. Сеанс отклонен принимающим',
'56': 'Неудачное завершение удаленного доступа. Сеанс не состоялся по таймауту',
'57': 'Неудачное завершение удаленного доступа',
'59': 'Неудачное завершение - устаревшая версия службы',
'60': 'Неудачное завершение - служба не установлена',
'61': 'Неудачное завершение - устаревшие версии компонентов',
'62': 'Неудачное завершение - отсутствуют файлы компонентов УД',
'70': 'Передача файла через чат',
'80': 'Начало обращения. Инициатор пользователь',
'81': 'Начало обращения. Инициатор специалист',
'82': 'Завершение работы специалиста (Закрытие обращения)',
'83': 'Обращение поступило в очередь. Нет свободных специалистов',
'84': 'Перевод обращения на специалиста',
'85': 'Перевод обращения в компанию вендора',
'86': 'Для обращения в очереди появился свободный специалист',
'87': 'Недоступность линии (нерабочее время)',
'88': 'Недоступность линии по переводу. При переводе обращения в компанию вендора попали в нерабочее время',
'89': 'Перевод в другую линию поддержки',
'90': 'Обращение закрыто автоматически по отсутствию активности в чате',
'91':  'Обращение закрыто автоматически, т.к. удалена линия поддержки',
'92': 'Обращение закрыто автоматически, т.к. удалена подписка пользователя',
'93': 'Обращение закрыто автоматически, т.к. удален пользователь',
'200': 'Перевод обращения специалистом на бота',
}

def connect_1c(req):
    with open('/root/web_app_4dk/web_app_4dk/static/logs/connect.json', 'r') as file:
        data = json.load(file)
        data.append(req)

        with open('/root/web_app_4dk/web_app_4dk/static/logs/connect.json', 'w') as file:
            json.dump(data, file, indent=4)

    if req['message_type'] == '82':
        task_text = ''
        treatment_id = req['treatment_id']
        with open('/root/web_app_4dk/web_app_4dk/static/logs/connect.json', 'r') as file:
            data = json.load(file)
            for event in data:
                if event['treatment_id'] == treatment_id:
                    time = dateutil.parser.isoparse(event['message_time'])
                    message_time = f"{time.hour}:{time.minute}:{time.second} {time.day}.{time.month}.{time.year}"
                    task_text += f"{message_time} {connect_codes[str(event['message_type'])]}\n"
                    if 'text' in event:
                        task_text += f"{event['text']}\n"
                    if 'duration' in event:
                        task_text += f"Длительность: {event['duration']} секунд\n"
                    if 'preview_link' in event:
                        task_text += f"{event['preview_link']}\n"


        b.call('tasks.task.add', {'fields': {
            'TITLE': f"Коннект",
            'DESCRIPTION': task_text,
            'GROUP_ID': '13',
            'CREATED_BY': '173',
            'RESPONSIBLE_ID': '311',
        }})
